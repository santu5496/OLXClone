@{
    ViewData["Title"] = "Find Your Perfect Car";
    Layout = null; // Remove shared layout for full screen
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        /* Mobile-first full screen styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f8f9fa;
            overflow-x: hidden;
        }

        /* Custom Mobile Header */
        .mobile-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 20px;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

            .mobile-header h1 {
                font-size: 1.5rem;
                font-weight: 600;
                margin: 0;
            }

        .login-btn {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            cursor: pointer;
        }

            .login-btn:hover {
                background: rgba(255,255,255,0.3);
                color: white;
                transform: translateY(-1px);
            }

        /* Search Section */
        .search-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 20px 20px 30px;
            color: white;
        }

        .search-container {
            position: relative;
            max-width: 600px;
            margin: 0 auto;
        }

        .search-input-group {
            position: relative;
            border-radius: 30px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0,0,0,0.2);
        }

            .search-input-group input {
                border: none;
                padding: 18px 100px 18px 25px;
                font-size: 1.1rem;
                border-radius: 30px;
                background: white;
                width: 100%;
                outline: none;
            }

            .search-input-group button {
                position: absolute;
                right: 8px;
                top: 50%;
                transform: translateY(-50%);
                border: none;
                background: #ff6b6b;
                color: white;
                padding: 12px 24px;
                border-radius: 22px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
            }

                .search-input-group button:hover {
                    background: #ff5252;
                    transform: translateY(-50%) scale(1.05);
                }

        /* Search Suggestions */
        #searchSuggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 1000;
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.2);
            margin-top: 8px;
            max-height: 250px;
            overflow-y: auto;
        }

            #searchSuggestions .dropdown-item {
                padding: 15px 20px;
                color: #495057;
                text-decoration: none;
                border-bottom: 1px solid #f0f0f0;
                cursor: pointer;
                transition: background-color 0.2s ease;
            }

                #searchSuggestions .dropdown-item:hover {
                    background-color: #f8f9fa;
                }

                #searchSuggestions .dropdown-item:last-child {
                    border-bottom: none;
                }

        /* Quick Stats */
        .quick-stats {
            background: white;
            margin: -20px 20px 25px;
            border-radius: 20px;
            padding: 25px;
            box-shadow: 0 4px 25px rgba(0,0,0,0.1);
            position: relative;
            z-index: 10;
        }

        .stat-item {
            text-align: center;
            padding: 10px 8px;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: 700;
            color: #667eea;
            display: block;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.85rem;
            color: #6c757d;
            font-weight: 500;
        }

        /* Main Content Container */
        .main-content {
            display: block;
        }

        /* Filters */
        .filters-container {
            background: white;
            margin: 0 20px 25px;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
        }

        .filters-toggle {
            background: #f8f9fa;
            border: none;
            width: 100%;
            padding: 18px 25px;
            text-align: left;
            font-weight: 600;
            color: #495057;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

            .filters-toggle:hover {
                background: #e9ecef;
            }

        .filters-content {
            padding: 0 25px 25px;
            display: none;
        }

            .filters-content.show {
                display: block;
            }

        .filter-group {
            margin-bottom: 20px;
        }

        .filter-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 10px;
            font-size: 0.95rem;
        }

        .form-control, .form-select {
            border-radius: 12px;
            border: 1px solid #e0e0e0;
            padding: 14px 18px;
            font-size: 0.95rem;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

            .form-control:focus, .form-select:focus {
                border-color: #667eea;
                box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            }

        .fuel-type-checkboxes, .transmission-checkboxes {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
        }

        .form-check {
            margin-bottom: 10px;
        }

        .form-check-input {
            margin-right: 10px;
        }

        .form-check-label {
            font-size: 0.95rem;
            color: #495057;
            cursor: pointer;
        }

        /* Sort Container */
        .sort-container {
            background: white;
            margin: 0 20px 25px;
            padding: 18px 25px;
            border-radius: 20px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .results-count {
            font-size: 0.95rem;
            color: #6c757d;
            font-weight: 500;
        }

        /* Car Cards */
        .cars-container {
            padding: 0 20px;
        }

        .car-card {
            background: white;
            border-radius: 20px;
            margin-bottom: 25px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .car-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 30px rgba(0,0,0,0.15);
            }

        .car-image-container {
            position: relative;
            height: 220px;
            overflow: hidden;
        }

        .car-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .car-card:hover .car-image {
            transform: scale(1.05);
        }

        .car-badges {
            position: absolute;
            top: 15px;
            left: 15px;
            z-index: 5;
        }

            .car-badges .badge {
                margin-right: 8px;
                margin-bottom: 8px;
                font-size: 0.75rem;
                padding: 6px 12px;
                border-radius: 12px;
                font-weight: 500;
            }

        .images-count {
            position: absolute;
            bottom: 15px;
            right: 15px;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .car-content {
            padding: 25px;
        }

        .car-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 12px;
            line-height: 1.3;
        }

        .car-price {
            font-size: 1.5rem;
            font-weight: 700;
            color: #27ae60;
            margin-bottom: 8px;
        }

        .price-section {
            margin-bottom: 18px;
        }

            .price-section .text-muted {
                font-size: 0.9rem;
            }

        .car-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
            margin-bottom: 20px;
        }

        .detail-item {
            display: flex;
            align-items: center;
            font-size: 0.9rem;
            color: #6c757d;
        }

            .detail-item i {
                width: 18px;
                margin-right: 10px;
                color: #667eea;
            }

        .car-actions {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
        }

        .btn-view, .btn-contact {
            padding: 12px 16px;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            text-align: center;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }

        .btn-view {
            background: #f8f9fa;
            color: #495057;
            border: 1px solid #e0e0e0;
        }

            .btn-view:hover {
                background: #e9ecef;
                transform: translateY(-1px);
            }

        .btn-contact {
            background: #667eea;
            color: white;
        }

            .btn-contact:hover {
                background: #5a67d8;
                transform: translateY(-1px);
            }

        .emi-link {
            color: #667eea;
            text-decoration: none;
            font-size: 0.9rem;
            margin-top: 12px;
            display: inline-block;
            font-weight: 500;
        }

            .emi-link:hover {
                text-decoration: underline;
            }

        /* Loading States */
        .loading-spinner {
            text-align: center;
            padding: 60px 20px;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 25px;
        }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* No Results */
        .no-results {
            text-align: center;
            padding: 60px 20px;
            color: #6c757d;
        }

            .no-results i {
                font-size: 4rem;
                margin-bottom: 25px;
                color: #dee2e6;
            }

        /* Pagination */
        .pagination-container {
            display: flex;
            justify-content: center;
            padding: 25px 0;
        }

        .pagination-btn {
            background: white;
            border: 1px solid #e0e0e0;
            color: #495057;
            padding: 12px 18px;
            margin: 0 5px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.2s ease;
            cursor: pointer;
        }

            .pagination-btn:hover {
                background: #f8f9fa;
                border-color: #667eea;
            }

            .pagination-btn.active {
                background: #667eea;
                color: white;
                border-color: #667eea;
            }

            .pagination-btn:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        /* Modal Styles */
        .modal-content {
            border-radius: 20px;
            border: none;
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 20px 20px 0 0;
            padding: 20px 25px;
        }

        .modal-body {
            padding: 25px;
        }

        .modal-title {
            font-weight: 600;
        }

        /* Desktop & Laptop Styles */
        @@media (min-width: 992px) {
            .container-fluid

        {
            max-width: 1400px;
            margin: 0 auto;
        }

        .mobile-header {
            padding: 15px 30px;
        }

            .mobile-header h1 {
                font-size: 1.8rem;
            }

        .search-section {
            padding: 30px 30px 40px;
        }

        .search-input-group {
            max-width: 700px;
        }

        .quick-stats {
            margin: -20px 30px 30px;
            padding: 30px;
        }

        .stat-number {
            font-size: 2.2rem;
        }

        .stat-label {
            font-size: 0.9rem;
        }

        .main-content {
            display: grid;
            grid-template-columns: 320px 1fr;
            gap: 30px;
            padding: 0 30px;
        }

        .filters-container {
            margin: 0;
            position: sticky;
            top: 100px;
            height: fit-content;
        }

        .filters-toggle {
            display: none;
        }

        .filters-content {
            display: block !important;
            padding: 25px;
        }

        .cars-section {
            min-height: 100vh;
        }

        .cars-container {
            padding: 0;
        }

        .sort-container {
            margin: 0 0 30px 0;
        }

        #carListings {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
            gap: 25px;
        }

        .car-card {
            margin-bottom: 0;
        }

        .car-image-container {
            height: 240px;
        }

        .pagination-container {
            justify-content: center;
            padding: 40px 0;
        }

        .no-results {
            padding: 80px 20px;
        }

        .loading-spinner {
            padding: 80px 20px;
        }

        }

        /* Tablet Styles */
        @@media (min-width: 768px) and (max-width: 991px) {
            .mobile-header

        {
            padding: 12px 25px;
        }

        .mobile-header h1 {
            font-size: 1.6rem;
        }

        .search-section {
            padding: 25px 25px 35px;
        }

        .search-input-group {
            max-width: 550px;
        }

        .quick-stats {
            margin: -18px 25px 25px;
            padding: 25px;
        }

        .stat-number {
            font-size: 2rem;
        }

        .filters-container {
            margin: 0 25px 25px;
        }

        .sort-container {
            margin: 0 25px 25px;
        }

        .cars-container {
            padding: 0 25px;
        }

        #carListings {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 20px;
        }

        .car-card {
            margin-bottom: 0;
        }

        .car-image-container {
            height: 220px;
        }

        .fuel-type-checkboxes, .transmission-checkboxes {
            grid-template-columns: 1fr 1fr;
        }

        }

        /* Small tablets and large phones */
        @@media (min-width: 577px) and (max-width: 767px) {
            .mobile-header h1

        {
            font-size: 1.5rem;
        }

        .search-section {
            padding: 20px 20px 30px;
        }

        .quick-stats {
            margin: -15px 20px 20px;
        }

        .filters-container {
            margin: 0 20px 20px;
        }

        .sort-container {
            margin: 0 20px 20px;
        }

        .cars-container {
            padding: 0 20px;
        }

        #carListings {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 15px;
        }

        .car-card {
            margin-bottom: 0;
        }

        .fuel-type-checkboxes, .transmission-checkboxes {
            grid-template-columns: 1fr 1fr;
        }

        }

        /* Mobile Styles */
        @@media (max-width: 576px) {
            .mobile-header

        {
            padding: 12px 15px;
        }

        .mobile-header h1 {
            font-size: 1.3rem;
        }

        .search-section {
            padding: 15px 15px 25px;
        }

        .search-input-group input {
            padding: 16px 90px 16px 20px;
            font-size: 1rem;
        }

        .search-input-group button {
            padding: 10px 20px;
        }

        .quick-stats {
            margin: -15px 15px 20px;
            padding: 20px;
        }

        .stat-number {
            font-size: 1.5rem;
        }

        .filters-container, .sort-container, .cars-container {
            margin-left: 15px;
            margin-right: 15px;
        }

        .car-image-container {
            height: 200px;
        }

        .car-content {
            padding: 20px;
        }

        .fuel-type-checkboxes, .transmission-checkboxes {
            grid-template-columns: 1fr;
        }

        .sort-container {
            flex-direction: column;
            gap: 15px;
            align-items: flex-start;
        }

        #carListings {
            display: block;
        }

        .car-card {
            margin-bottom: 20px;
        }

        .car-actions {
            grid-template-columns: 1fr;
        }

        .car-details {
            grid-template-columns: 1fr;
        }

        .modal-body {
            padding: 20px;
        }

        }
    </style>
</head>
<body>
    <!-- Mobile Header with Login -->
    <header class="mobile-header">
        <div class="d-flex justify-content-between align-items-center">
            <h1><i class="fas fa-car me-2"></i>CarFinder</h1>
            <button class="btn login-btn" onclick="redirectToLogin()">
                <i class="fas fa-sign-in-alt me-1"></i>Login
            </button>
        </div>
    </header>

    <!-- Search Section -->
    <section class="search-section">
        <div class="search-container">
            <div class="search-input-group">
                <input type="text" class="form-control" id="searchKeyword"
                       placeholder="Search by brand, model, or location..." autocomplete="off">
                <button type="button" id="searchBtn">
                    <i class="fas fa-search"></i>
                </button>
            </div>
            <!-- Search Suggestions Dropdown -->
            <div class="dropdown-menu w-100" id="searchSuggestions" style="display: none;"></div>
        </div>
    </section>

    <!-- Quick Stats -->
    <div class="quick-stats">
        <div class="row">
            <div class="col-3">
                <div class="stat-item">
                    <span class="stat-number" id="totalActiveCars">0</span>
                    <div class="stat-label">Total Cars</div>
                </div>
            </div>
            <div class="col-3">
                <div class="stat-item">
                    <span class="stat-number" id="totalVerifiedCars">0</span>
                    <div class="stat-label">Featured</div>
                </div>
            </div>
            <div class="col-3">
                <div class="stat-item">
                    <span class="stat-number" id="totalFeaturedCars">0</span>
                    <div class="stat-label">Verified</div>
                </div>
            </div>
            <div class="col-3">
                <div class="stat-item">
                    <span class="stat-number" id="totalResults">0</span>
                    <div class="stat-label">Fuel Types</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content Container -->
    <div class="main-content">
        <!-- Filters Sidebar (Desktop) / Collapsible (Mobile) -->
        <div class="filters-container">
            <button class="filters-toggle" onclick="toggleFilters()">
                <span><i class="fas fa-filter me-2"></i>Filters</span>
                <i class="fas fa-chevron-down" id="filterIcon"></i>
            </button>
            <div class="filters-content" id="filtersContent">
                <!-- Price Range Filter -->
                <div class="row">
                    <div class="col-6">
                        <div class="filter-group">
                            <label class="filter-label">Min Price</label>
                            <input type="number" class="form-control" id="minPrice" placeholder="Min Price">
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="filter-group">
                            <label class="filter-label">Max Price</label>
                            <input type="number" class="form-control" id="maxPrice" placeholder="Max Price">
                        </div>
                    </div>
                </div>

                <!-- Brand Filter -->
                <div class="filter-group">
                    <label class="filter-label">Brand</label>
                    <select class="form-select" id="brandFilter">
                        <option value="">All Brands</option>
                    </select>
                </div>

                <!-- Model Filter -->
                <div class="filter-group">
                    <label class="filter-label">Model</label>
                    <select class="form-select" id="modelFilter" disabled>
                        <option value="">Select Brand First</option>
                    </select>
                </div>

                <!-- City Filter -->
                <div class="filter-group">
                    <label class="filter-label">Location</label>
                    <select class="form-select" id="cityFilter">
                        <option value="">All Cities</option>
                    </select>
                </div>

                <!-- Category Filter -->
                <div class="filter-group">
                    <label class="filter-label">Category</label>
                    <select class="form-select" id="categoryFilter">
                        <option value="">All Categories</option>
                    </select>
                </div>

                <!-- Fuel Type Filter -->
                <div class="filter-group">
                    <label class="filter-label">Fuel Type</label>
                    <div class="fuel-type-checkboxes" id="fuelTypeContainer">
                        <!-- Will be populated by JavaScript -->
                    </div>
                </div>

                <!-- Transmission Filter -->
                <div class="filter-group">
                    <label class="filter-label">Transmission</label>
                    <div class="transmission-checkboxes" id="transmissionContainer">
                        <!-- Will be populated by JavaScript -->
                    </div>
                </div>

                <!-- Year Range Filter -->
                <div class="row">
                    <div class="col-6">
                        <div class="filter-group">
                            <label class="filter-label">Min Year</label>
                            <input type="number" class="form-control" id="minYear" placeholder="Min Year" min="1990" max="2025">
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="filter-group">
                            <label class="filter-label">Max Year</label>
                            <input type="number" class="form-control" id="maxYear" placeholder="Max Year" min="1990" max="2025">
                        </div>
                    </div>
                </div>

                <!-- KM Range Filter -->
                <div class="row">
                    <div class="col-6">
                        <div class="filter-group">
                            <label class="filter-label">Min KM</label>
                            <input type="number" class="form-control" id="minKM" placeholder="Min KM">
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="filter-group">
                            <label class="filter-label">Max KM</label>
                            <input type="number" class="form-control" id="maxKM" placeholder="Max KM">
                        </div>
                    </div>
                </div>

                <!-- Quick Filters -->
                <div class="filter-group">
                    <label class="filter-label">Quick Filters</label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="verifiedOnly">
                        <label class="form-check-label" for="verifiedOnly">Verified Only</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="firstOwnerOnly">
                        <label class="form-check-label" for="firstOwnerOnly">First Owner Only</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="noAccident">
                        <label class="form-check-label" for="noAccident">No Accident History</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="automaticOnly">
                        <label class="form-check-label" for="automaticOnly">Automatic Only</label>
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-3 d-lg-none">
                    <button class="btn btn-outline-secondary" id="clearFilters">Clear All</button>
                    <button class="btn btn-primary" onclick="applyFilters()">Apply Filters</button>
                </div>

                <div class="d-none d-lg-block mt-3">
                    <button class="btn btn-outline-secondary w-100 mb-2" id="clearFilters">Clear All Filters</button>
                </div>
            </div>
        </div>

        <!-- Cars Section -->
        <div class="cars-section">
            <!-- Sort and Results Count -->
            <div class="sort-container">
                <div class="results-count" id="resultsCount">Loading...</div>
                <select class="form-select" id="sortBy" style="width: auto; font-size: 0.9rem;">
                    <option value="latest">Latest First</option>
                    <option value="price_low">Price: Low to High</option>
                    <option value="price_high">Price: High to Low</option>
                    <option value="year_new">Year: Newest First</option>
                    <option value="year_old">Year: Oldest First</option>
                    <option value="km_low">KM: Low to High</option>
                    <option value="popular">Most Popular</option>
                </select>
            </div>

            <!-- Loading Spinner -->
            <div class="loading-spinner" id="loadingSpinner">
                <div class="spinner"></div>
                <p>Finding cars for you...</p>
            </div>

            <!-- Car Listings -->
            <div class="cars-container" id="carListingsContainer" style="display: none;">
                <div id="carListings">
                    <!-- Will be populated by JavaScript -->
                </div>
            </div>

            <!-- No Results -->
            <div class="no-results" id="noResultsMessage" style="display: none;">
                <i class="fas fa-search"></i>
                <h4>No cars found</h4>
                <p>Try adjusting your search criteria or filters</p>
                <button class="btn btn-primary" onclick="clearAllFilters()">Clear All Filters</button>
            </div>

            <!-- Pagination -->
            <div class="pagination-container" id="paginationSection" style="display: none;">
                <div id="paginationContainer">
                    <!-- Will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>

    <!-- Login Modal -->
    <div class="modal fade" id="loginModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Login to CarFinder</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="loginForm">
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" required>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Login</button>
                    </form>
                    <div class="text-center mt-3">
                        <small class="text-muted">Don't have an account? <a href="#" onclick="showSignupModal()">Sign up</a></small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Car Details Modal - REMOVED -->
    <!-- Contact Modal -->
    <div class="modal fade" id="inquiryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Contact Seller</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="inquiryForm">
                        <input type="hidden" id="inquiryListingId">

                        <div class="mb-3">
                            <label for="customerName" class="form-label">Full Name *</label>
                            <input type="text" class="form-control" id="customerName" required>
                        </div>

                        <div class="mb-3">
                            <label for="customerPhone" class="form-label">Phone Number *</label>
                            <input type="tel" class="form-control" id="customerPhone" required>
                        </div>

                        <div class="mb-3">
                            <label for="customerEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="customerEmail">
                        </div>

                        <div class="mb-3">
                            <label for="inquiryType" class="form-label">Inquiry Type</label>
                            <select class="form-select" id="inquiryType">
                                <option value="General Inquiry">General Inquiry</option>
                                <option value="Price Negotiation">Price Negotiation</option>
                                <option value="Test Drive">Test Drive Request</option>
                                <option value="Inspection">Inspection Request</option>
                                <option value="Finance">Finance Options</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="message" class="form-label">Message</label>
                            <textarea class="form-control" id="message" rows="3" placeholder="Your message..."></textarea>
                        </div>

                        <div class="mb-3">
                            <label for="budgetRange" class="form-label">Budget Range</label>
                            <select class="form-select" id="budgetRange">
                                <option value="">Select Budget Range</option>
                                <option value="Under 2 Lakh">Under ₹2 Lakh</option>
                                <option value="2-5 Lakh">₹2-5 Lakh</option>
                                <option value="5-10 Lakh">₹5-10 Lakh</option>
                                <option value="10-20 Lakh">₹10-20 Lakh</option>
                                <option value="Above 20 Lakh">Above ₹20 Lakh</option>
                            </select>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="financeRequired">
                            <label class="form-check-label" for="financeRequired">
                                I need finance assistance
                            </label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitInquiry()">Send Inquiry</button>
                </div>
            </div>
        </div>
    </div>

    <!-- EMI Calculator Modal -->
    <div class="modal fade" id="emiModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">EMI Calculator</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="emiForm">
                        <div class="mb-3">
                            <label for="loanAmount" class="form-label">Loan Amount (₹)</label>
                            <input type="number" class="form-control" id="loanAmount">
                        </div>

                        <div class="mb-3">
                            <label for="interestRate" class="form-label">Interest Rate (% per annum)</label>
                            <input type="number" class="form-control" id="interestRate" value="8.5" step="0.1">
                        </div>

                        <div class="mb-3">
                            <label for="loanTenure" class="form-label">Loan Tenure (months)</label>
                            <select class="form-select" id="loanTenure">
                                <option value="12">1 Year</option>
                                <option value="24">2 Years</option>
                                <option value="36">3 Years</option>
                                <option value="48">4 Years</option>
                                <option value="60" selected>5 Years</option>
                                <option value="72">6 Years</option>
                                <option value="84">7 Years</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <button type="button" class="btn btn-primary" onclick="calculateEMIAmount()">Calculate EMI</button>
                        </div>

                        <div id="emiResult" class="alert alert-success" style="display: none;">
                            <h5>EMI Calculation Result</h5>
                            <p class="mb-1"><strong>Monthly EMI: ₹<span id="monthlyEMI">0</span></strong></p>
                            <p class="mb-1">Total Amount: ₹<span id="totalAmount">0</span></p>
                            <p class="mb-0">Total Interest: ₹<span id="totalInterest">0</span></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script>
        // Car Finder Application Class - Enhanced Version
        class CarFinder {
            constructor() {
                this.currentPage = 1;
                this.currentFilters = {
                    searchKeyword: '',
                    brandId: null,
                    modelId: null,
                    cityId: null,
                    categoryId: null,
                    minPrice: null,
                    maxPrice: null,
                    minYear: null,
                    maxYear: null,
                    minKM: null,
                    maxKM: null,
                    fuelTypeId: null,
                    transmissionId: null,
                    verifiedOnly: false,
                    firstOwnerOnly: false,
                    noAccident: false,
                    automaticOnly: false,
                    sortBy: 'latest',
                    page: 1,
                    pageSize: 20
                };
                this.searchTimeout = null;
                this.filterData = {
                    brands: [],
                    cities: [],
                    categories: [],
                    fuelTypes: [],
                    transmissions: []
                };
                this.init();
            }

            init() {
                this.initializePage();
            }

            initializePage() {
                this.loadUrlParameters();

                Promise.all([
                    this.loadFilterData(),
                    this.loadStatistics()
                ]).then(() => {
                    this.setupEventHandlers();
                    this.initializeFilters();
                    this.performSearch();
                }).catch(error => {
                    console.error('Error initializing page:', error);
                    this.showError('Failed to load page data. Please refresh the page.');
                });
            }

            setupEventHandlers() {
                // Search functionality
                $('#searchBtn').click(() => this.performSearch());
                $('#searchKeyword').keypress((e) => {
                    if (e.which === 13) this.performSearch();
                });

                $('#searchKeyword').on('input', this.debounce(() => {
                    this.showSearchSuggestions();
                }, 300));

                $(document).click((e) => {
                    if (!$(e.target).closest('.search-container').length) {
                        $('#searchSuggestions').hide();
                    }
                });

                // Filter controls
                $('#brandFilter').change(() => {
                    const brandId = $('#brandFilter').val();
                    this.currentFilters.brandId = brandId || null;
                    this.currentFilters.modelId = null;
                    this.loadModelsByBrand(brandId);
                    this.updateFiltersAndSearch();
                });

                $('#modelFilter, #cityFilter, #categoryFilter').change(() => {
                    this.updateFiltersAndSearch();
                });

                $('#minPrice, #maxPrice, #minYear, #maxYear, #minKM, #maxKM').on('input',
                    this.debounce(() => this.updateFiltersAndSearch(), 500));

                $(document).on('change', '.fuel-type-filter, .transmission-filter, #verifiedOnly, #firstOwnerOnly, #noAccident, #automaticOnly',
                    () => this.updateFiltersAndSearch());

                $('#sortBy').change(() => this.updateFiltersAndSearch());
                $('#clearFilters').click(() => this.clearAllFilters());
            }

            loadUrlParameters() {
                const urlParams = new URLSearchParams(window.location.search);

                this.currentFilters.searchKeyword = urlParams.get('keyword') || '';
                this.currentFilters.brandId = urlParams.get('brandId') ? parseInt(urlParams.get('brandId')) : null;
                this.currentFilters.modelId = urlParams.get('modelId') ? parseInt(urlParams.get('modelId')) : null;
                this.currentFilters.cityId = urlParams.get('cityId') ? parseInt(urlParams.get('cityId')) : null;
                this.currentFilters.categoryId = urlParams.get('categoryId') ? parseInt(urlParams.get('categoryId')) : null;
                this.currentFilters.minPrice = urlParams.get('minPrice') ? parseInt(urlParams.get('minPrice')) : null;
                this.currentFilters.maxPrice = urlParams.get('maxPrice') ? parseInt(urlParams.get('maxPrice')) : null;
                this.currentFilters.minYear = urlParams.get('minYear') ? parseInt(urlParams.get('minYear')) : null;
                this.currentFilters.maxYear = urlParams.get('maxYear') ? parseInt(urlParams.get('maxYear')) : null;
                this.currentFilters.minKM = urlParams.get('minKM') ? parseInt(urlParams.get('minKM')) : null;
                this.currentFilters.maxKM = urlParams.get('maxKM') ? parseInt(urlParams.get('maxKM')) : null;
                this.currentFilters.fuelTypeId = urlParams.get('fuelTypeId') ? parseInt(urlParams.get('fuelTypeId')) : null;
                this.currentFilters.transmissionId = urlParams.get('transmissionId') ? parseInt(urlParams.get('transmissionId')) : null;
                this.currentFilters.verifiedOnly = urlParams.get('verifiedOnly') === 'true';
                this.currentFilters.firstOwnerOnly = urlParams.get('firstOwnerOnly') === 'true';
                this.currentFilters.noAccident = urlParams.get('noAccident') === 'true';
                this.currentFilters.automaticOnly = urlParams.get('automaticOnly') === 'true';
                this.currentFilters.sortBy = urlParams.get('sortBy') || 'latest';
                this.currentFilters.page = urlParams.get('page') ? parseInt(urlParams.get('page')) : 1;

                this.currentPage = this.currentFilters.page;
            }

            async loadFilterData() {
                try {
                    const response = await $.get('/SearchView/GetFilterData');
                    if (response.success) {
                        this.filterData = response.data;
                        this.populateFilterDropdowns();
                    } else {
                        throw new Error('Failed to load filter data: ' + response.message);
                    }
                } catch (error) {
                    throw new Error('Failed to load filter data');
                }
            }

            populateFilterDropdowns() {
                // Populate brands
                let brandHtml = '<option value="">All Brands</option>';
                this.filterData.brands.forEach(brand => {
                    brandHtml += `<option value="${brand.id}">${brand.name} (${brand.count})</option>`;
                });
                $('#brandFilter').html(brandHtml);

                // Populate cities
                let cityHtml = '<option value="">All Cities</option>';
                this.filterData.cities.forEach(city => {
                    cityHtml += `<option value="${city.id}">${city.name} (${city.count})</option>`;
                });
                $('#cityFilter').html(cityHtml);

                // Populate categories
                let categoryHtml = '<option value="">All Categories</option>';
                this.filterData.categories.forEach(category => {
                    categoryHtml += `<option value="${category.id}">${category.name}</option>`;
                });
                $('#categoryFilter').html(categoryHtml);

                // Populate fuel types
                let fuelHtml = '';
                this.filterData.fuelTypes.forEach(fuel => {
                    fuelHtml += `
                        <div class="form-check">
                            <input class="form-check-input fuel-type-filter" type="checkbox" value="${fuel.id}" id="fuel_${fuel.id}">
                            <label class="form-check-label" for="fuel_${fuel.id}">${fuel.name}</label>
                        </div>
                    `;
                });
                $('#fuelTypeContainer').html(fuelHtml);

                // Populate transmissions
                let transmissionHtml = '';
                this.filterData.transmissions.forEach(transmission => {
                    transmissionHtml += `
                        <div class="form-check">
                            <input class="form-check-input transmission-filter" type="checkbox" value="${transmission.id}" id="trans_${transmission.id}">
                            <label class="form-check-label" for="trans_${transmission.id}">${transmission.name}</label>
                        </div>
                    `;
                });
                $('#transmissionContainer').html(transmissionHtml);
            }

            initializeFilters() {
                $('#searchKeyword').val(this.currentFilters.searchKeyword);
                $('#brandFilter').val(this.currentFilters.brandId || '');
                $('#cityFilter').val(this.currentFilters.cityId || '');
                $('#categoryFilter').val(this.currentFilters.categoryId || '');
                $('#minPrice').val(this.currentFilters.minPrice || '');
                $('#maxPrice').val(this.currentFilters.maxPrice || '');
                $('#minYear').val(this.currentFilters.minYear || '');
                $('#maxYear').val(this.currentFilters.maxYear || '');
                $('#minKM').val(this.currentFilters.minKM || '');
                $('#maxKM').val(this.currentFilters.maxKM || '');
                $('#sortBy').val(this.currentFilters.sortBy);
                $('#verifiedOnly').prop('checked', this.currentFilters.verifiedOnly);
                $('#firstOwnerOnly').prop('checked', this.currentFilters.firstOwnerOnly);
                $('#noAccident').prop('checked', this.currentFilters.noAccident);
                $('#automaticOnly').prop('checked', this.currentFilters.automaticOnly);

                if (this.currentFilters.fuelTypeId) {
                    $(`#fuel_${this.currentFilters.fuelTypeId}`).prop('checked', true);
                }

                if (this.currentFilters.transmissionId) {
                    $(`#trans_${this.currentFilters.transmissionId}`).prop('checked', true);
                }

                if (this.currentFilters.brandId) {
                    this.loadModelsByBrand(this.currentFilters.brandId, this.currentFilters.modelId);
                }
            }

            async loadStatistics() {
                try {
                    const response = await $.get('/SearchView/GetCarStatistics');
                    if (response.success) {
                        $('#totalActiveCars').text(response.data.totalActive.toLocaleString());
                        $('#totalVerifiedCars').text(response.data.totalVerified.toLocaleString());
                        $('#totalFeaturedCars').text(response.data.totalFeatured.toLocaleString());
                    } else {
                        throw new Error('Failed to load statistics: ' + response.message);
                    }
                } catch (error) {
                    throw new Error('Failed to load statistics');
                }
            }

            showSearchSuggestions() {
                const keyword = $('#searchKeyword').val().trim();
                if (keyword.length < 2) {
                    $('#searchSuggestions').hide();
                    return;
                }

                $.get('/SearchView/GetSearchSuggestions', { keyword: keyword })
                    .done((response) => {
                        if (response.success && response.data.length > 0) {
                            let html = '';
                            response.data.forEach(suggestion => {
                                html += `<a class="dropdown-item" href="#" onclick="carFinder.selectSuggestion('${suggestion.replace(/'/g, "\\'")}')">${suggestion}</a>`;
                            });
                            $('#searchSuggestions').html(html).show();
                        } else {
                            $('#searchSuggestions').hide();
                        }
                    })
                    .fail(() => {
                        $('#searchSuggestions').hide();
                    });
            }

            selectSuggestion(term) {
                $('#searchKeyword').val(term);
                $('#searchSuggestions').hide();
                this.performSearch();
            }

            async loadModelsByBrand(brandId, selectedModelId = null) {
                if (!brandId) {
                    $('#modelFilter').html('<option value="">All Models</option>').prop('disabled', true);
                    return;
                }

                try {
                    const response = await $.get('/SearchView/GetModelsByBrand', { brandId: brandId });
                    if (response.success) {
                        let html = '<option value="">All Models</option>';
                        response.data.forEach(model => {
                            const selected = selectedModelId && selectedModelId == model.id ? 'selected' : '';
                            html += `<option value="${model.id}" ${selected}>${model.name}</option>`;
                        });
                        $('#modelFilter').html(html).prop('disabled', false);

                        if (selectedModelId) {
                            $('#modelFilter').val(selectedModelId);
                        }
                    }
                } catch (error) {
                    $('#modelFilter').html('<option value="">Error loading models</option>');
                }
            }

            updateFiltersAndSearch() {
                this.updateCurrentFilters();
                this.currentFilters.page = 1;
                this.currentPage = 1;
                this.performSearch();
                this.updateUrlParameters();
            }

            updateCurrentFilters() {
                this.currentFilters.searchKeyword = $('#searchKeyword').val().trim();
                this.currentFilters.brandId = $('#brandFilter').val() || null;
                this.currentFilters.modelId = $('#modelFilter').val() || null;
                this.currentFilters.cityId = $('#cityFilter').val() || null;
                this.currentFilters.categoryId = $('#categoryFilter').val() || null;
                this.currentFilters.minPrice = $('#minPrice').val() || null;
                this.currentFilters.maxPrice = $('#maxPrice').val() || null;
                this.currentFilters.minYear = $('#minYear').val() || null;
                this.currentFilters.maxYear = $('#maxYear').val() || null;
                this.currentFilters.minKM = $('#minKM').val() || null;
                this.currentFilters.maxKM = $('#maxKM').val() || null;
                this.currentFilters.sortBy = $('#sortBy').val();
                this.currentFilters.verifiedOnly = $('#verifiedOnly').is(':checked');
                this.currentFilters.firstOwnerOnly = $('#firstOwnerOnly').is(':checked');
                this.currentFilters.noAccident = $('#noAccident').is(':checked');
                this.currentFilters.automaticOnly = $('#automaticOnly').is(':checked');

                const selectedFuelTypes = [];
                $('.fuel-type-filter:checked').each(function() {
                    selectedFuelTypes.push($(this).val());
                });
                this.currentFilters.fuelTypeId = selectedFuelTypes.length > 0 ? selectedFuelTypes[0] : null;

                const selectedTransmissions = [];
                $('.transmission-filter:checked').each(function() {
                    selectedTransmissions.push($(this).val());
                });
                this.currentFilters.transmissionId = selectedTransmissions.length > 0 ? selectedTransmissions[0] : null;
            }

            updateUrlParameters() {
                const params = new URLSearchParams();

                Object.keys(this.currentFilters).forEach(key => {
                    if (this.currentFilters[key] !== null && this.currentFilters[key] !== '' && this.currentFilters[key] !== false) {
                        params.set(key, this.currentFilters[key]);
                    }
                });

                const newUrl = window.location.pathname + (params.toString() ? '?' + params.toString() : '');
                window.history.replaceState({}, '', newUrl);
            }

            async performSearch() {
                this.updateCurrentFilters();

                $('#loadingSpinner').show();
                $('#carListingsContainer').hide();
                $('#noResultsMessage').hide();

                try {
                    const response = await $.ajax({
                        url: '/SearchView/SearchCars',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(this.currentFilters)
                    });

                    $('#loadingSpinner').hide();

                    if (response.success) {
                        this.displaySearchResults(response.data);
                        this.updateUrlParameters();
                    } else {
                        this.showError('Search failed: ' + response.message);
                    }
                } catch (error) {
                    $('#loadingSpinner').hide();
                    this.showError('An error occurred while searching. Please try again.');
                }
            }

            displaySearchResults(data) {
                if (data.cars && data.cars.length > 0) {
                    let html = '';
                    data.cars.forEach(car => {
                        html += this.createCarCard(car);
                    });

                    $('#carListings').html(html);
                    $('#carListingsContainer').show();
                    $('#noResultsMessage').hide();

                    $('#resultsCount').text(`Showing ${data.cars.length} of ${data.totalCount} cars`);
                    $('#totalResults').text(data.totalCount.toLocaleString());

                    this.updatePagination(data);
                } else {
                    $('#carListingsContainer').hide();
                    $('#noResultsMessage').show();
                    $('#resultsCount').text('No cars found');
                    $('#paginationSection').hide();
                }
            }

            createCarCard(car) {
                const badges = [];
                if (car.isVerified) badges.push('<span class="badge bg-success">Verified</span>');
                if (car.isFeatured) badges.push('<span class="badge bg-warning">Featured</span>');
                if (car.isUrgentSale) badges.push('<span class="badge bg-danger">Urgent</span>');

                const imageCount = car.totalImages > 1 ? `<div class="images-count"><i class="fas fa-camera"></i> ${car.totalImages}</div>` : '';

                const originalPrice = car.originalPrice && car.originalPrice > car.sellingPrice
                    ? `<small class="text-muted text-decoration-line-through">₹${car.originalPrice.toLocaleString()}</small>`
                    : '';

                const negotiable = car.isPriceNegotiable ? '<small class="text-success">(Negotiable)</small>' : '';

                const ownerInfo = car.totalPreviousOwners
                    ? `<div class="detail-item mt-2"><i class="fas fa-user"></i><span>${car.totalPreviousOwners === 1 ? '1st Owner' : car.totalPreviousOwners + 'th Owner'}</span></div>`
                    : '';

                return `
                    <div class="car-card">
                        <div class="car-image-container">
                            <img src="${car.primaryImage || '/images/placeholder-car.jpg'}"
                                 class="car-image" alt="${car.title}" loading="lazy">
                            <div class="car-badges">${badges.join('')}</div>
                            ${imageCount}
                        </div>

                        <div class="car-content">
                            <h3 class="car-title">${car.title}</h3>

                              <div class="registration-number-section">
            <div class="car-registration">${car.registrationNumber}</div>
        </div>


                            <div class="price-section">
                                <div class="car-price">₹${car.sellingPrice.toLocaleString()}</div>
                                ${originalPrice}
                                ${negotiable}
                            </div>

                            <div class="car-details">
                                <div class="detail-item">
                                    <i class="fas fa-calendar"></i>
                                    <span>${car.year}</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-tachometer-alt"></i>
                                    <span>${car.kilometersOnOdometer.toLocaleString()} km</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-gas-pump"></i>
                                    <span>${car.fuelType}</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-cogs"></i>
                                    <span>${car.transmission}</span>
                                </div>
                            </div>

                            <div class="detail-item">
                                <i class="fas fa-map-marker-alt"></i>
                                <span>${car.cityName}, ${car.stateName}</span>
                            </div>

                            ${ownerInfo}

                            <div class="car-actions mt-3">
                                <a href="/SearchView/CarDetail/${car.listingId}" class="btn-view" onclick="carFinder.recordCarView(${car.listingId})">
                                    <i class="fas fa-eye me-1"></i>View Details
                                </a>
                                <button class="btn-contact" onclick="carFinder.showInquiryModal(${car.listingId}, '${car.title.replace(/'/g, "\\'")}')">
                                    <i class="fas fa-phone me-1"></i>Contact
                                </button>
                            </div>

                            <a href="#" class="emi-link" onclick="carFinder.calculateEMI(${car.sellingPrice}, ${car.listingId})">
                                <i class="fas fa-calculator me-1"></i>Calculate EMI
                            </a>
                        </div>
                    </div>`;
            }

            updatePagination(data) {
                if (data.totalPages <= 1) {
                    $('#paginationSection').hide();
                    return;
                }

                let html = '';

                if (data.hasPreviousPage) {
                    html += `<button class="pagination-btn" onclick="carFinder.loadPage(${data.currentPage - 1})">Previous</button>`;
                }

                const startPage = Math.max(1, data.currentPage - 2);
                const endPage = Math.min(data.totalPages, data.currentPage + 2);

                for (let i = startPage; i <= endPage; i++) {
                    const active = i === data.currentPage ? 'active' : '';
                    html += `<button class="pagination-btn ${active}" onclick="carFinder.loadPage(${i})">${i}</button>`;
                }

                if (data.hasNextPage) {
                    html += `<button class="pagination-btn" onclick="carFinder.loadPage(${data.currentPage + 1})">Next</button>`;
                }

                $('#paginationContainer').html(html);
                $('#paginationSection').show();
                this.currentPage = data.currentPage;
            }

            loadPage(page) {
                this.currentFilters.page = page;
                this.currentPage = page;
                this.performSearch();

                $('html, body').animate({
                    scrollTop: $('#carListingsContainer').offset().top - 100
                }, 500);
            }

            clearAllFilters() {
                $('#searchKeyword').val('');
                $('#brandFilter, #modelFilter, #cityFilter, #categoryFilter').val('');
                $('#minPrice, #maxPrice, #minYear, #maxYear, #minKM, #maxKM').val('');
                $('#sortBy').val('latest');
                $('.fuel-type-filter, .transmission-filter, #verifiedOnly, #firstOwnerOnly, #noAccident, #automaticOnly').prop('checked', false);
                $('#modelFilter').prop('disabled', true).html('<option value="">Select Brand First</option>');

                this.currentFilters = {
                    searchKeyword: '',
                    brandId: null,
                    modelId: null,
                    cityId: null,
                    categoryId: null,
                    minPrice: null,
                    maxPrice: null,
                    minYear: null,
                    maxYear: null,
                    minKM: null,
                    maxKM: null,
                    fuelTypeId: null,
                    transmissionId: null,
                    verifiedOnly: false,
                    firstOwnerOnly: false,
                    noAccident: false,
                    automaticOnly: false,
                    sortBy: 'latest',
                    page: 1,
                    pageSize: 20
                };

                this.currentPage = 1;
                this.performSearch();
            }

            recordCarView(listingId) {
                $.post('/SearchView/RecordCarView', { listingId: listingId });
            }

            showInquiryModal(listingId, carTitle) {
                $('#inquiryListingId').val(listingId);
                $('#inquiryModal .modal-title').text(`Contact Seller - ${carTitle}`);
                const modal = new bootstrap.Modal(document.getElementById('inquiryModal'));
                modal.show();
            }

            submitInquiry() {
                const inquiryData = {
                    listingId: parseInt($('#inquiryListingId').val()),
                    customerName: $('#customerName').val(),
                    customerPhone: $('#customerPhone').val(),
                    customerEmail: $('#customerEmail').val(),
                    inquiryType: $('#inquiryType').val(),
                    message: $('#message').val(),
                    budgetRange: $('#budgetRange').val(),
                    financeRequired: $('#financeRequired').is(':checked')
                };

                if (!inquiryData.customerName || !inquiryData.customerPhone) {
                    this.showError('Please fill in all required fields.');
                    return;
                }

                $.ajax({
                    url: '/SearchView/SubmitInquiry',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(inquiryData),
                    success: (response) => {
                        if (response.success) {
                            bootstrap.Modal.getInstance(document.getElementById('inquiryModal')).hide();
                            $('#inquiryForm')[0].reset();
                            this.showSuccess('Your inquiry has been submitted successfully! The seller will contact you soon.');
                        } else {
                            this.showError('Failed to submit inquiry: ' + response.message);
                        }
                    },
                    error: () => {
                        this.showError('An error occurred while submitting your inquiry. Please try again.');
                    }
                });
            }

            calculateEMI(carPrice, listingId) {
                $('#loanAmount').val(carPrice);
                const modal = new bootstrap.Modal(document.getElementById('emiModal'));
                modal.show();
            }

            calculateEMIAmount() {
                const amount = parseFloat($('#loanAmount').val());
                const rate = parseFloat($('#interestRate').val());
                const months = parseInt($('#loanTenure').val());

                if (!amount || !rate || !months) {
                    this.showError('Please fill in all EMI calculation fields.');
                    return;
                }

                $.get('/SearchView/CalculateEMI', {
                    amount: amount,
                    rate: rate,
                    months: months
                })
                .done((response) => {
                    if (response.success) {
                        const emi = response.emi;
                        const totalAmount = emi * months;
                        const totalInterest = totalAmount - amount;

                        $('#monthlyEMI').text(emi.toLocaleString());
                        $('#totalAmount').text(totalAmount.toLocaleString());
                        $('#totalInterest').text(totalInterest.toLocaleString());
                        $('#emiResult').show();
                    } else {
                        this.showError('EMI calculation failed: ' + response.message);
                    }
                })
                .fail(() => {
                    this.showError('EMI calculation failed. Please try again.');
                });
            }

            showError(message) {
                alert('Error: ' + message);
                // You can implement a more sophisticated notification system here
            }

            showSuccess(message) {
                alert('Success: ' + message);
                // You can implement a more sophisticated notification system here
            }

            debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            // Mock function - replace with actual API call
            mockGetCarById(id) {
                return {
                    listingId: id,
                    title: "2020 Honda Civic",
                    sellingPrice: 850000,
                    year: 2020,
                    kilometersOnOdometer: 35000,
                    fuelType: "Petrol",
                    transmission: "Manual",
                    cityName: "Mumbai",
                    stateName: "Maharashtra",
                    engineSize: "1.8L",
                    primaryImage: "/images/placeholder-car.jpg",
                    description: "Well maintained car with full service history."
                };
            }
        }

        // Global functions for onclick handlers
        function redirectToLogin() {
            window.location.href = '/User/LoginPage';
        }

        function toggleFilters() {
            const content = document.getElementById('filtersContent');
            const icon = document.getElementById('filterIcon');

            if (content.classList.contains('show')) {
                content.classList.remove('show');
                icon.classList.remove('fa-chevron-up');
                icon.classList.add('fa-chevron-down');
            } else {
                content.classList.add('show');
                icon.classList.remove('fa-chevron-down');
                icon.classList.add('fa-chevron-up');
            }
        }

        function applyFilters() {
            carFinder.updateFiltersAndSearch();
            // Hide filters after applying
            const content = document.getElementById('filtersContent');
            const icon = document.getElementById('filterIcon');
            content.classList.remove('show');
            icon.classList.remove('fa-chevron-up');
            icon.classList.add('fa-chevron-down');
        }

        function showSignupModal() {
            // Implement signup modal functionality
            console.log('Signup modal would be shown here');
        }

        function calculateEMIAmount() {
            carFinder.calculateEMIAmount();
        }

        function submitInquiry() {
            carFinder.submitInquiry();
        }

        // Initialize the application
        let carFinder;
        $(document).ready(() => {
            carFinder = new CarFinder();
        });
    </script>
</body>
</html>