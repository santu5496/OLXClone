@{
    ViewData["Title"] = "Find Your Perfect Car";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Search Header Section -->
<section class="bg-primary text-white py-4">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h1 class="h3 mb-3">Find Your Perfect Car</h1>
                <!-- Main Search Bar -->
                <div class="search-container">
                    <div class="input-group input-group-lg">
                        <input type="text" class="form-control" id="searchKeyword"
                               placeholder="Search by brand, model, or location...">
                        <button class="btn btn-warning" type="button" id="searchBtn">
                            <i class="fas fa-search"></i> Search
                        </button>
                    </div>
                    <!-- Search Suggestions Dropdown -->
                    <div class="dropdown-menu w-100" id="searchSuggestions" style="display: none;"></div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Quick Stats -->
<section class="bg-light py-3">
    <div class="container">
        <div class="row text-center">
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <h4 class="mb-0" id="totalActiveCars">0</h4>
                    <small class="text-muted">Active Listings</small>
                </div>
            </div>
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <h4 class="mb-0" id="totalVerifiedCars">0</h4>
                    <small class="text-muted">Verified Cars</small>
                </div>
            </div>
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <h4 class="mb-0" id="totalFeaturedCars">0</h4>
                    <small class="text-muted">Featured Cars</small>
                </div>
            </div>
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <h4 class="mb-0" id="totalResults">0</h4>
                    <small class="text-muted">Search Results</small>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Main Content -->
<div class="container my-4">
    <div class="row">
        <!-- Filters Sidebar -->
        <div class="col-lg-3">
            <div class="filters-sidebar sticky-top">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Filters</h5>
                        <button class="btn btn-sm btn-outline-secondary" id="clearFilters">Clear All</button>
                    </div>
                    <div class="card-body p-0">
                        <!-- Price Range Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Price Range</h6>
                            <div class="row g-2">
                                <div class="col-6">
                                    <input type="number" class="form-control form-control-sm" id="minPrice" placeholder="Min Price">
                                </div>
                                <div class="col-6">
                                    <input type="number" class="form-control form-control-sm" id="maxPrice" placeholder="Max Price">
                                </div>
                            </div>
                        </div>

                        <!-- Brand Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Brand</h6>
                            <select class="form-select form-select-sm" id="brandFilter">
                                <option value="">All Brands</option>
                            </select>
                        </div>

                        <!-- Model Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Model</h6>
                            <select class="form-select form-select-sm" id="modelFilter" disabled>
                                <option value="">Select Brand First</option>
                            </select>
                        </div>

                        <!-- City Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Location</h6>
                            <select class="form-select form-select-sm" id="cityFilter">
                                <option value="">All Cities</option>
                            </select>
                        </div>

                        <!-- Category Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Category</h6>
                            <select class="form-select form-select-sm" id="categoryFilter">
                                <option value="">All Categories</option>
                            </select>
                        </div>

                        <!-- Fuel Type Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Fuel Type</h6>
                            <div class="fuel-type-checkboxes" id="fuelTypeContainer">
                                <!-- Will be populated by JavaScript -->
                            </div>
                        </div>

                        <!-- Transmission Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Transmission</h6>
                            <div class="transmission-checkboxes" id="transmissionContainer">
                                <!-- Will be populated by JavaScript -->
                            </div>
                        </div>

                        <!-- Year Range Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Year Range</h6>
                            <div class="row g-2">
                                <div class="col-6">
                                    <input type="number" class="form-control form-control-sm" id="minYear" placeholder="Min Year" min="1990" max="2025">
                                </div>
                                <div class="col-6">
                                    <input type="number" class="form-control form-control-sm" id="maxYear" placeholder="Max Year" min="1990" max="2025">
                                </div>
                            </div>
                        </div>

                        <!-- KM Range Filter -->
                        <div class="filter-section p-3 border-bottom">
                            <h6 class="filter-title mb-3">Kilometers</h6>
                            <div class="row g-2">
                                <div class="col-6">
                                    <input type="number" class="form-control form-control-sm" id="minKM" placeholder="Min KM">
                                </div>
                                <div class="col-6">
                                    <input type="number" class="form-control form-control-sm" id="maxKM" placeholder="Max KM">
                                </div>
                            </div>
                        </div>

                        <!-- Quick Filters -->
                        <div class="filter-section p-3">
                            <h6 class="filter-title mb-3">Quick Filters</h6>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="verifiedOnly">
                                <label class="form-check-label" for="verifiedOnly">Verified Only</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="firstOwnerOnly">
                                <label class="form-check-label" for="firstOwnerOnly">First Owner Only</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="noAccident">
                                <label class="form-check-label" for="noAccident">No Accident History</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="automaticOnly">
                                <label class="form-check-label" for="automaticOnly">Automatic Only</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Results Section -->
        <div class="col-lg-9">
            <!-- Sort and View Options -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="results-info">
                    <span class="text-muted" id="resultsCount">Loading...</span>
                </div>
                <div class="sort-options d-flex align-items-center gap-2">
                    <label class="form-label mb-0 me-2">Sort by:</label>
                    <select class="form-select form-select-sm" id="sortBy" style="width: auto;">
                        <option value="latest">Latest First</option>
                        <option value="price_low">Price: Low to High</option>
                        <option value="price_high">Price: High to Low</option>
                        <option value="year_new">Year: Newest First</option>
                        <option value="year_old">Year: Oldest First</option>
                        <option value="km_low">KM: Low to High</option>
                        <option value="popular">Most Popular</option>
                    </select>
                </div>
            </div>

            <!-- Loading Spinner -->
            <div class="text-center py-5" id="loadingSpinner" style="display: block;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2 text-muted">Loading cars...</p>
            </div>

            <!-- Car Listings Grid -->
            <div id="carListingsContainer" style="display: none;">
                <div class="row" id="carListings">
                    <!-- Will be populated by JavaScript -->
                </div>
            </div>

            <!-- No Results Message -->
            <div id="noResultsMessage" class="text-center py-5" style="display: none;">
                <i class="fas fa-search fa-3x text-muted mb-3"></i>
                <h4>No cars found</h4>
                <p class="text-muted">Try adjusting your search criteria or filters</p>
                <button class="btn btn-primary" onclick="clearAllFilters()">Clear All Filters</button>
            </div>

            <!-- Pagination -->
            <nav aria-label="Car listings pagination" class="mt-4" id="paginationSection" style="display: none;">
                <ul class="pagination justify-content-center" id="paginationContainer">
                    <!-- Will be populated by JavaScript -->
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Inquiry Modal -->
<div class="modal fade" id="inquiryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Contact Seller</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="inquiryForm">
                    <input type="hidden" id="inquiryListingId">

                    <div class="mb-3">
                        <label for="customerName" class="form-label">Full Name *</label>
                        <input type="text" class="form-control" id="customerName" required>
                    </div>

                    <div class="mb-3">
                        <label for="customerPhone" class="form-label">Phone Number *</label>
                        <input type="tel" class="form-control" id="customerPhone" required>
                    </div>

                    <div class="mb-3">
                        <label for="customerEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="customerEmail">
                    </div>

                    <div class="mb-3">
                        <label for="inquiryType" class="form-label">Inquiry Type</label>
                        <select class="form-select" id="inquiryType">
                            <option value="General Inquiry">General Inquiry</option>
                            <option value="Price Negotiation">Price Negotiation</option>
                            <option value="Test Drive">Test Drive Request</option>
                            <option value="Inspection">Inspection Request</option>
                            <option value="Finance">Finance Options</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="message" class="form-label">Message</label>
                        <textarea class="form-control" id="message" rows="3" placeholder="Your message..."></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="budgetRange" class="form-label">Budget Range</label>
                        <select class="form-select" id="budgetRange">
                            <option value="">Select Budget Range</option>
                            <option value="Under 2 Lakh">Under ₹2 Lakh</option>
                            <option value="2-5 Lakh">₹2-5 Lakh</option>
                            <option value="5-10 Lakh">₹5-10 Lakh</option>
                            <option value="10-20 Lakh">₹10-20 Lakh</option>
                            <option value="Above 20 Lakh">Above ₹20 Lakh</option>
                        </select>
                    </div>

                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="financeRequired">
                        <label class="form-check-label" for="financeRequired">
                            I need finance assistance
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitInquiry()">Send Inquiry</button>
            </div>
        </div>
    </div>
</div>

<!-- EMI Calculator Modal -->
<div class="modal fade" id="emiModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">EMI Calculator</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="emiForm">
                    <div class="mb-3">
                        <label for="loanAmount" class="form-label">Loan Amount (₹)</label>
                        <input type="number" class="form-control" id="loanAmount">
                    </div>

                    <div class="mb-3">
                        <label for="interestRate" class="form-label">Interest Rate (% per annum)</label>
                        <input type="number" class="form-control" id="interestRate" value="8.5" step="0.1">
                    </div>

                    <div class="mb-3">
                        <label for="loanTenure" class="form-label">Loan Tenure (months)</label>
                        <select class="form-select" id="loanTenure">
                            <option value="12">1 Year</option>
                            <option value="24">2 Years</option>
                            <option value="36">3 Years</option>
                            <option value="48">4 Years</option>
                            <option value="60" selected>5 Years</option>
                            <option value="72">6 Years</option>
                            <option value="84">7 Years</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <button type="button" class="btn btn-primary" onclick="calculateEMIAmount()">Calculate EMI</button>
                    </div>

                    <div id="emiResult" class="alert alert-success" style="display: none;">
                        <h5>EMI Calculation Result</h5>
                        <p class="mb-1"><strong>Monthly EMI: ₹<span id="monthlyEMI">0</span></strong></p>
                        <p class="mb-1">Total Amount: ₹<span id="totalAmount">0</span></p>
                        <p class="mb-0">Total Interest: ₹<span id="totalInterest">0</span></p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Global variables
        let currentPage = 1;
        let currentFilters = {
            searchKeyword: '',
            brandId: null,
            modelId: null,
            cityId: null,
            categoryId: null,
            minPrice: null,
            maxPrice: null,
            minYear: null,
            maxYear: null,
            minKM: null,
            maxKM: null,
            fuelTypeId: null,
            transmissionId: null,
            verifiedOnly: false,
            firstOwnerOnly: false,
            noAccident: false,
            automaticOnly: false,
            sortBy: 'latest',
            page: 1,
            pageSize: 20
        };

        // Store filter data
        let filterData = {
            brands: [],
            cities: [],
            categories: [],
            fuelTypes: [],
            transmissions: []
        };

        $(document).ready(function() {
            initializePage();
        });

        function initializePage() {
            // Load URL parameters first
            loadUrlParameters();

            // Load all filter data and statistics
            Promise.all([
                loadFilterData(),
                loadStatistics()
            ]).then(() => {
                // Setup event handlers after data is loaded
                setupEventHandlers();

                // Initialize filters with URL parameters
                initializeFilters();

                // Perform initial search
                performSearch();
            }).catch(error => {
                console.error('Error initializing page:', error);
                showError('Failed to load page data. Please refresh the page.');
            });
        }

        function loadUrlParameters() {
            const urlParams = new URLSearchParams(window.location.search);

            // Load search parameters from URL
            currentFilters.searchKeyword = urlParams.get('keyword') || '';
            currentFilters.brandId = urlParams.get('brandId') ? parseInt(urlParams.get('brandId')) : null;
            currentFilters.modelId = urlParams.get('modelId') ? parseInt(urlParams.get('modelId')) : null;
            currentFilters.cityId = urlParams.get('cityId') ? parseInt(urlParams.get('cityId')) : null;
            currentFilters.categoryId = urlParams.get('categoryId') ? parseInt(urlParams.get('categoryId')) : null;
            currentFilters.minPrice = urlParams.get('minPrice') ? parseInt(urlParams.get('minPrice')) : null;
            currentFilters.maxPrice = urlParams.get('maxPrice') ? parseInt(urlParams.get('maxPrice')) : null;
            currentFilters.minYear = urlParams.get('minYear') ? parseInt(urlParams.get('minYear')) : null;
            currentFilters.maxYear = urlParams.get('maxYear') ? parseInt(urlParams.get('maxYear')) : null;
            currentFilters.minKM = urlParams.get('minKM') ? parseInt(urlParams.get('minKM')) : null;
            currentFilters.maxKM = urlParams.get('maxKM') ? parseInt(urlParams.get('maxKM')) : null;
            currentFilters.fuelTypeId = urlParams.get('fuelTypeId') ? parseInt(urlParams.get('fuelTypeId')) : null;
            currentFilters.transmissionId = urlParams.get('transmissionId') ? parseInt(urlParams.get('transmissionId')) : null;
            currentFilters.verifiedOnly = urlParams.get('verifiedOnly') === 'true';
            currentFilters.firstOwnerOnly = urlParams.get('firstOwnerOnly') === 'true';
            currentFilters.noAccident = urlParams.get('noAccident') === 'true';
            currentFilters.automaticOnly = urlParams.get('automaticOnly') === 'true';
            currentFilters.sortBy = urlParams.get('sortBy') || 'latest';
            currentFilters.page = urlParams.get('page') ? parseInt(urlParams.get('page')) : 1;

            currentPage = currentFilters.page;
        }

        function loadFilterData() {
            return new Promise((resolve, reject) => {
                $.get('/SearchView/GetFilterData')
                    .done(function(response) {
                        if (response.success) {
                            filterData = response.data;
                            populateFilterDropdowns();
                            resolve();
                        } else {
                            reject('Failed to load filter data: ' + response.message);
                        }
                    })
                    .fail(function() {
                        reject('Failed to load filter data');
                    });
            });
        }

        function populateFilterDropdowns() {
            // Populate brands
            let brandHtml = '<option value="">All Brands</option>';
            filterData.brands.forEach(function(brand) {
                brandHtml += `<option value="${brand.id}">${brand.name} (${brand.count})</option>`;
            });
            $('#brandFilter').html(brandHtml);

            // Populate cities
            let cityHtml = '<option value="">All Cities</option>';
            filterData.cities.forEach(function(city) {
                cityHtml += `<option value="${city.id}">${city.name} (${city.count})</option>`;
            });
            $('#cityFilter').html(cityHtml);

            // Populate categories
            let categoryHtml = '<option value="">All Categories</option>';
            filterData.categories.forEach(function(category) {
                categoryHtml += `<option value="${category.id}">${category.name}</option>`;
            });
            $('#categoryFilter').html(categoryHtml);

            // Populate fuel types
            let fuelHtml = '';
            filterData.fuelTypes.forEach(function(fuel) {
                fuelHtml += `
                    <div class="form-check">
                        <input class="form-check-input fuel-type-filter" type="checkbox" value="${fuel.id}" id="fuel_${fuel.id}">
                        <label class="form-check-label" for="fuel_${fuel.id}">${fuel.name}</label>
                    </div>
                `;
            });
            $('#fuelTypeContainer').html(fuelHtml);

            // Populate transmissions
            let transmissionHtml = '';
            filterData.transmissions.forEach(function(transmission) {
                transmissionHtml += `
                    <div class="form-check">
                        <input class="form-check-input transmission-filter" type="checkbox" value="${transmission.id}" id="trans_${transmission.id}">
                        <label class="form-check-label" for="trans_${transmission.id}">${transmission.name}</label>
                    </div>
                `;
            });
            $('#transmissionContainer').html(transmissionHtml);
        }

        function initializeFilters() {
            $('#searchKeyword').val(currentFilters.searchKeyword);
            $('#brandFilter').val(currentFilters.brandId || '');
            $('#cityFilter').val(currentFilters.cityId || '');
            $('#categoryFilter').val(currentFilters.categoryId || '');
            $('#minPrice').val(currentFilters.minPrice || '');
            $('#maxPrice').val(currentFilters.maxPrice || '');
            $('#minYear').val(currentFilters.minYear || '');
            $('#maxYear').val(currentFilters.maxYear || '');
            $('#minKM').val(currentFilters.minKM || '');
            $('#maxKM').val(currentFilters.maxKM || '');
            $('#sortBy').val(currentFilters.sortBy);
            $('#verifiedOnly').prop('checked', currentFilters.verifiedOnly);
            $('#firstOwnerOnly').prop('checked', currentFilters.firstOwnerOnly);
            $('#noAccident').prop('checked', currentFilters.noAccident);
            $('#automaticOnly').prop('checked', currentFilters.automaticOnly);

            // Set fuel type checkboxes
            if (currentFilters.fuelTypeId) {
                $(`#fuel_${currentFilters.fuelTypeId}`).prop('checked', true);
            }

            // Set transmission checkboxes
            if (currentFilters.transmissionId) {
                $(`#trans_${currentFilters.transmissionId}`).prop('checked', true);
            }

            // Load models if brand is selected
            if (currentFilters.brandId) {
                loadModelsByBrand(currentFilters.brandId, currentFilters.modelId);
            }
        }

        function setupEventHandlers() {
            $('#searchBtn').click(performSearch);
            $('#searchKeyword').keypress(function(e) {
                if (e.which === 13) performSearch();
            });

            $('#searchKeyword').on('input', debounce(showSearchSuggestions, 300));
            $(document).click(function(e) {
                if (!$(e.target).closest('.search-container').length) {
                    $('#searchSuggestions').hide();
                }
            });

            $('#brandFilter').change(function() {
                const brandId = $(this).val();
                currentFilters.brandId = brandId || null;
                currentFilters.modelId = null; // Reset model when brand changes
                loadModelsByBrand(brandId);
                updateFiltersAndSearch();
            });

            $('#modelFilter, #cityFilter, #categoryFilter').change(function() {
                updateFiltersAndSearch();
            });

            $('#minPrice, #maxPrice, #minYear, #maxYear, #minKM, #maxKM').on('input', debounce(updateFiltersAndSearch, 500));

            // Use event delegation for dynamically created checkboxes
            $(document).on('change', '.fuel-type-filter, .transmission-filter, #verifiedOnly, #firstOwnerOnly, #noAccident, #automaticOnly', updateFiltersAndSearch);

            $('#sortBy').change(updateFiltersAndSearch);
            $('#clearFilters').click(clearAllFilters);
        }

        function loadStatistics() {
            return new Promise((resolve, reject) => {
                $.get('/SearchView/GetCarStatistics')
                    .done(function(response) {
                        if (response.success) {
                            $('#totalActiveCars').text(response.data.totalActive.toLocaleString());
                            $('#totalVerifiedCars').text(response.data.totalVerified.toLocaleString());
                            $('#totalFeaturedCars').text(response.data.totalFeatured.toLocaleString());
                            resolve();
                        } else {
                            reject('Failed to load statistics: ' + response.message);
                        }
                    })
                    .fail(function() {
                        reject('Failed to load statistics');
                    });
            });
        }

        function showSearchSuggestions() {
            const keyword = $('#searchKeyword').val().trim();
            if (keyword.length < 2) {
                $('#searchSuggestions').hide();
                return;
            }

            $.get('/SearchView/GetSearchSuggestions', { keyword: keyword })
                .done(function(response) {
                    if (response.success && response.data.length > 0) {
                        let html = '';
                        response.data.forEach(function(suggestion) {
                            html += `<a class="dropdown-item" href="#" onclick="selectSuggestion('${suggestion.replace(/'/g, "\\'")}')">${suggestion}</a>`;
                        });
                        $('#searchSuggestions').html(html).show();
                    } else {
                        $('#searchSuggestions').hide();
                    }
                })
                .fail(function() {
                    $('#searchSuggestions').hide();
                });
        }

        function selectSuggestion(term) {
            $('#searchKeyword').val(term);
            $('#searchSuggestions').hide();
            performSearch();
        }

        function loadModelsByBrand(brandId, selectedModelId = null) {
            if (!brandId) {
                $('#modelFilter').html('<option value="">All Models</option>').prop('disabled', true);
                return;
            }

            $.get('/SearchView/GetModelsByBrand', { brandId: brandId })
                .done(function(response) {
                    if (response.success) {
                        let html = '<option value="">All Models</option>';
                        response.data.forEach(function(model) {
                            const selected = selectedModelId && selectedModelId == model.id ? 'selected' : '';
                            html += `<option value="${model.id}" ${selected}>${model.name}</option>`;
                        });
                        $('#modelFilter').html(html).prop('disabled', false);

                        // Set the selected model if provided
                        if (selectedModelId) {
                            $('#modelFilter').val(selectedModelId);
                        }
                    }
                })
                .fail(function() {
                    $('#modelFilter').html('<option value="">Error loading models</option>');
                });
        }

        function updateFiltersAndSearch() {
            updateCurrentFilters();
            currentFilters.page = 1;
            currentPage = 1;
            performSearch();
            updateUrlParameters();
        }

        function updateCurrentFilters() {
            currentFilters.searchKeyword = $('#searchKeyword').val().trim();
            currentFilters.brandId = $('#brandFilter').val() || null;
            currentFilters.modelId = $('#modelFilter').val() || null;
            currentFilters.cityId = $('#cityFilter').val() || null;
            currentFilters.categoryId = $('#categoryFilter').val() || null;
            currentFilters.minPrice = $('#minPrice').val() || null;
            currentFilters.maxPrice = $('#maxPrice').val() || null;
            currentFilters.minYear = $('#minYear').val() || null;
            currentFilters.maxYear = $('#maxYear').val() || null;
            currentFilters.minKM = $('#minKM').val() || null;
            currentFilters.maxKM = $('#maxKM').val() || null;
            currentFilters.sortBy = $('#sortBy').val();
            currentFilters.verifiedOnly = $('#verifiedOnly').is(':checked');
            currentFilters.firstOwnerOnly = $('#firstOwnerOnly').is(':checked');
            currentFilters.noAccident = $('#noAccident').is(':checked');
            currentFilters.automaticOnly = $('#automaticOnly').is(':checked');

            // Get selected fuel types
            const selectedFuelTypes = [];
            $('.fuel-type-filter:checked').each(function() {
                selectedFuelTypes.push($(this).val());
            });
            currentFilters.fuelTypeId = selectedFuelTypes.length > 0 ? selectedFuelTypes[0] : null;

            // Get selected transmissions
            const selectedTransmissions = [];
            $('.transmission-filter:checked').each(function() {
                selectedTransmissions.push($(this).val());
            });
            currentFilters.transmissionId = selectedTransmissions.length > 0 ? selectedTransmissions[0] : null;
        }

        function updateUrlParameters() {
            const params = new URLSearchParams();

            Object.keys(currentFilters).forEach(key => {
                if (currentFilters[key] !== null && currentFilters[key] !== '' && currentFilters[key] !== false) {
                    params.set(key, currentFilters[key]);
                }
            });

            const newUrl = window.location.pathname + (params.toString() ? '?' + params.toString() : '');
            window.history.replaceState({}, '', newUrl);
        }

        function performSearch() {
            updateCurrentFilters();

            $('#loadingSpinner').show();
            $('#carListingsContainer').hide();
            $('#noResultsMessage').hide();

            $.ajax({
                url: '/SearchView/SearchCars',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(currentFilters),
                success: function(response) {
                    $('#loadingSpinner').hide();

                    if (response.success) {
                        displaySearchResults(response.data);
                        updateUrlParameters();
                    } else {
                        showError('Search failed: ' + response.message);
                    }
                },
                error: function() {
                    $('#loadingSpinner').hide();
                    showError('An error occurred while searching. Please try again.');
                }
            });
        }

        function displaySearchResults(data) {
            if (data.cars && data.cars.length > 0) {
                let html = '';
                data.cars.forEach(function(car) {
                    html += createCarCard(car);
                });

                $('#carListings').html(html);
                $('#carListingsContainer').show();
                $('#noResultsMessage').hide();

                $('#resultsCount').text(`Showing ${data.cars.length} of ${data.totalCount} cars`);
                $('#totalResults').text(data.totalCount.toLocaleString());

                updatePagination(data);
            } else {
                $('#carListingsContainer').hide();
                $('#noResultsMessage').show();
                $('#resultsCount').text('No cars found');
                $('#paginationSection').hide();
            }
        }

        function createCarCard(car) {
            debugger
            const badges = [];
            if (car.isVerified) badges.push('<span class="badge bg-success">Verified</span>');
            if (car.isFeatured) badges.push('<span class="badge bg-warning">Featured</span>');
            if (car.isUrgentSale) badges.push('<span class="badge bg-danger">Urgent Sale</span>');

            const imageCount = car.totalImages > 1 ? `<div class="images-count"><i class="fas fa-camera"></i> ${car.totalImages}</div>` : '';

            const originalPrice = car.originalPrice && car.originalPrice > car.sellingPrice
                ? `<small class="text-muted text-decoration-line-through">₹${car.originalPrice.toLocaleString()}</small>`
                : '';

            const negotiable = car.isPriceNegotiable ? '<small class="text-success">(Negotiable)</small>' : '';

            const ownerInfo = car.totalPreviousOwners
                ? `<div class="owner-info mt-2"><small class="text-muted">${car.totalPreviousOwners === 1 ? '1st Owner' : car.totalPreviousOwners + 'th Owner'}</small></div>`
                : '';

            const conditionRating = car.exteriorRating ? `
                <div class="condition-ratings mt-2">
                    <small class="text-muted d-block">Condition:</small>
                    <div class="d-flex gap-2">
                        <div class="rating-item">
                            <small>Ext: </small>
                            ${Array.from({length: 5}, (_, i) => `<i class="fas fa-star ${i < car.exteriorRating ? 'text-warning' : 'text-muted'}"></i>`).join('')}
                        </div>
                    </div>
                </div>` : '';

            return `
                <div class="col-md-6 col-xl-4 mb-4 car-card-item">
                    <div class="card car-card h-100">
                        <div class="position-relative">
                            <img src="${car.primaryImage || '/images/placeholder-car.jpg'}"
                                 class="card-img-top car-image" alt="${car.title}" loading="lazy">

                            <div class="car-badges">${badges.join('')}</div>
                            ${imageCount}
                        </div>

                        <div class="card-body">
                            <h5 class="card-title text-truncate">${car.title}</h5>

                            <div class="price-section mb-2">
                                <h4 class="price text-primary mb-0">₹${car.sellingPrice.toLocaleString()}</h4>
                                ${originalPrice}
                                ${negotiable}
                            </div>

                            <div class="car-details">
                                <div class="row text-muted small">
                                    <div class="col-6"><i class="fas fa-calendar"></i> ${car.year}</div>
                                    <div class="col-6"><i class="fas fa-tachometer-alt"></i> ${car.kilometersOnOdometer.toLocaleString()} km</div>
                                </div>
                                <div class="row text-muted small mt-1">
                                    <div class="col-6"><i class="fas fa-gas-pump"></i> ${car.fuelType}</div>
                                    <div class="col-6"><i class="fas fa-cogs"></i> ${car.transmission}</div>
                                </div>
                                <div class="row text-muted small mt-1">
                                    <div class="col-12"><i class="fas fa-map-marker-alt"></i> ${car.cityName}, ${car.stateName}</div>
                                </div>
                            </div>

                            ${ownerInfo}
                            ${conditionRating}
                        </div>

                        <div class="card-footer bg-transparent">
                            <div class="d-flex justify-content-between align-items-center">
                                <button class="btn btn-outline-primary btn-sm" onclick="viewCarDetail(${car.listingId})">
                                    View Details
                                </button>
                                <button class="btn btn-primary btn-sm" onclick="showInquiryModal(${car.listingId}, '${car.title.replace(/'/g, "\\'")}')">
                                    Contact Seller
                                </button>
                            </div>

                            <div class="mt-2">
                                <small>
                                    <a href="#" class="text-decoration-none" onclick="calculateEMI(${car.sellingPrice}, ${car.listingId})">
                                        <i class="fas fa-calculator"></i> Calculate EMI
                                    </a>
                                </small>
                            </div>
                        </div>
                    </div>
                </div>`;
        }

        function updatePagination(data) {
            if (data.totalPages <= 1) {
                $('#paginationSection').hide();
                return;
            }

            let html = '';

            if (data.hasPreviousPage) {
                html += `<li class="page-item"><a class="page-link" href="#" onclick="loadPage(${data.currentPage - 1})">Previous</a></li>`;
            }

            const startPage = Math.max(1, data.currentPage - 2);
            const endPage = Math.min(data.totalPages, data.currentPage + 2);

            for (let i = startPage; i <= endPage; i++) {
                const active = i === data.currentPage ? 'active' : '';
                html += `<li class="page-item ${active}"><a class="page-link" href="#" onclick="loadPage(${i})">${i}</a></li>`;
            }

            if (data.hasNextPage) {
                html += `<li class="page-item"><a class="page-link" href="#" onclick="loadPage(${data.currentPage + 1})">Next</a></li>`;
            }

            $('#paginationContainer').html(html);
            $('#paginationSection').show();
            currentPage = data.currentPage;
        }

        function loadPage(page) {
            currentFilters.page = page;
            currentPage = page;
            performSearch();

            // Scroll to top of results
            $('html, body').animate({
                scrollTop: $('#carListingsContainer').offset().top - 100
            }, 500);
        }

        function clearAllFilters() {
            $('#searchKeyword').val('');
            $('#brandFilter, #modelFilter, #cityFilter, #categoryFilter').val('');
            $('#minPrice, #maxPrice, #minYear, #maxYear, #minKM, #maxKM').val('');
            $('#sortBy').val('latest');
            $('.fuel-type-filter, .transmission-filter, #verifiedOnly, #firstOwnerOnly, #noAccident, #automaticOnly').prop('checked', false);
            $('#modelFilter').prop('disabled', true).html('<option value="">Select Brand First</option>');

            currentFilters = {
                searchKeyword: '',
                brandId: null,
                modelId: null,
                cityId: null,
                categoryId: null,
                minPrice: null,
                maxPrice: null,
                minYear: null,
                maxYear: null,
                minKM: null,
                maxKM: null,
                fuelTypeId: null,
                transmissionId: null,
                verifiedOnly: false,
                firstOwnerOnly: false,
                noAccident: false,
                automaticOnly: false,
                sortBy: 'latest',
                page: 1,
                pageSize: 20
            };

            currentPage = 1;
            performSearch();
        }

        function viewCarDetail(listingId) {
            $.post('/SearchView/RecordCarView', { listingId: listingId });
            window.location.href = `/SearchView/CarDetail/${listingId}`;
        }

        function showInquiryModal(listingId, carTitle) {
            $('#inquiryListingId').val(listingId);
            $('#inquiryModal .modal-title').text(`Contact Seller - ${carTitle}`);
            $('#inquiryModal').modal('show');
        }

        function submitInquiry() {
            const inquiryData = {
                listingId: parseInt($('#inquiryListingId').val()),
                customerName: $('#customerName').val(),
                customerPhone: $('#customerPhone').val(),
                customerEmail: $('#customerEmail').val(),
                inquiryType: $('#inquiryType').val(),
                message: $('#message').val(),
                budgetRange: $('#budgetRange').val(),
                financeRequired: $('#financeRequired').is(':checked')
            };

            if (!inquiryData.customerName || !inquiryData.customerPhone) {
                showError('Please fill in all required fields.');
                return;
            }

            $.ajax({
                url: '/SearchView/SubmitInquiry',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(inquiryData),
                success: function(response) {
                    if (response.success) {
                        $('#inquiryModal').modal('hide');
                        $('#inquiryForm')[0].reset();
                        showSuccess('Your inquiry has been submitted successfully! The seller will contact you soon.');
                    } else {
                        showError('Failed to submit inquiry: ' + response.message);
                    }
                },
                error: function() {
                    showError('An error occurred while submitting your inquiry. Please try again.');
                }
            });
        }

        function calculateEMI(carPrice, listingId) {
            $('#loanAmount').val(carPrice);
            $('#emiModal').modal('show');
        }

        function calculateEMIAmount() {
            const amount = parseFloat($('#loanAmount').val());
            const rate = parseFloat($('#interestRate').val());
            const months = parseInt($('#loanTenure').val());

            if (!amount || !rate || !months) {
                showError('Please fill in all EMI calculation fields.');
                return;
            }

            $.get('/SearchView/CalculateEMI', {
                amount: amount,
                rate: rate,
                months: months
            })
            .done(function(response) {
                if (response.success) {
                    const emi = response.emi;
                    const totalAmount = emi * months;
                    const totalInterest = totalAmount - amount;

                    $('#monthlyEMI').text(emi.toLocaleString());
                    $('#totalAmount').text(totalAmount.toLocaleString());
                    $('#totalInterest').text(totalInterest.toLocaleString());
                    $('#emiResult').show();
                } else {
                    showError('EMI calculation failed: ' + response.message);
                }
            })
            .fail(function() {
                showError('EMI calculation failed. Please try again.');
            });
        }

        function showError(message) {
            // You can replace this with a more sophisticated notification system
            alert('Error: ' + message);
        }

        function showSuccess(message) {
            // You can replace this with a more sophisticated notification system
            alert('Success: ' + message);
        }

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
    </script>

    <style>
        .car-card {
            transition: transform 0.2s, box-shadow 0.2s;
            border: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

            .car-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            }

        .car-image {
            height: 200px;
            object-fit: cover;
        }

        .car-badges {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 1;
        }

            .car-badges .badge {
                margin-right: 5px;
                margin-bottom: 5px;
            }

        .images-count {
            position: absolute;
            bottom: 10px;
            right: 10px;
            background: rgba(0,0,0,0.7);
            color: white;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 12px;
        }

        .price {
            font-weight: 600;
        }

        .stat-card {
            padding: 10px;
        }

        .filter-section {
            border-bottom: 1px solid #dee2e6;
        }

        .filter-title {
            font-weight: 600;
            color: #495057;
        }

        .filters-sidebar {
            top: 20px;
        }

        .search-container {
            position: relative;
        }

        #searchSuggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 1000;
            max-height: 200px;
            overflow-y: auto;
        }

        .rating-item .fa-star {
            font-size: 10px;
        }

        .car-details .fas {
            width: 12px;
            text-align: center;
            margin-right: 5px;
        }

        @@media (max-width: 768px) {
            .filters-sidebar

        {
            position: static !important;
            margin-bottom: 20px;
        }

        .stat-card h4 {
            font-size: 1.2rem;
        }

        .car-image {
            height: 180px;
        }

        }

        .car-card-small .card-img-top {
            height: 150px;
            object-fit: cover;
        }

        /* Loading state styles */
        .loading-placeholder {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            animation: loading 1.5s infinite;
        }

        @@keyframes loading {
            0%

        {
            background-position: 200% 0;
        }

        100% {
            background-position: -200% 0;
        }

        }
    </style>
}