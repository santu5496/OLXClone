// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace DbOperation.Models;

public partial class CarListings
{
    public int listingId { get; set; }

    public string listingTitle { get; set; }

    public int brandId { get; set; }

    public int modelId { get; set; }

    public int? variantId { get; set; }

    public int? categoryId { get; set; }

    public int manufacturingYear { get; set; }

    public int? manufacturingMonth { get; set; }

    public int registrationYear { get; set; }

    public int? registrationMonth { get; set; }

    public int? vehicleAge { get; set; }

    public int? engineCapacityInCC { get; set; }

    public decimal? engineCapacityInLiters { get; set; }

    public int? enginePowerInBHP { get; set; }

    public decimal? enginePowerInKW { get; set; }

    public int? engineTorqueInNm { get; set; }

    public int? engineSpecId { get; set; }

    public int fuelTypeId { get; set; }

    public int transmissionId { get; set; }

    public int? numberOfGears { get; set; }

    public int? colorId { get; set; }

    public int? numberOfDoors { get; set; }

    public int? seatingCapacity { get; set; }

    public int? bootSpaceInLiters { get; set; }

    public int? kerbWeightInKG { get; set; }

    public int? groundClearanceInMM { get; set; }

    public int? totalPreviousOwners { get; set; }

    public int? currentOwnershipDuration { get; set; }

    public int kilometersOnOdometer { get; set; }

    public int? averageMonthlyKilometers { get; set; }

    public decimal? mileageInCityKMPL { get; set; }

    public decimal? mileageOnHighwayKMPL { get; set; }

    public decimal? combinedMileageKMPL { get; set; }

    public int? overallConditionId { get; set; }

    public int? exteriorConditionRating { get; set; }

    public int? interiorConditionRating { get; set; }

    public int? engineConditionRating { get; set; }

    public int? tyreConditionRating { get; set; }

    public bool? hasAccidentHistory { get; set; }

    public string accidentSeverityLevel { get; set; }

    public bool? isFloodAffected { get; set; }

    public bool? hasElectricalIssues { get; set; }

    public bool? hasMechanicalIssues { get; set; }

    public bool? requiresImmediateRepairs { get; set; }

    public decimal? estimatedRepairCost { get; set; }

    public decimal? originalPurchasePrice { get; set; }

    public decimal? currentMarketPrice { get; set; }

    public decimal sellingPriceAsked { get; set; }

    public decimal? minimumAcceptablePrice { get; set; }

    public bool? isPriceNegotiable { get; set; }

    public bool? priceIncludesTransfer { get; set; }

    public DateOnly? priceValidUntilDate { get; set; }

    public string registrationNumber { get; set; }

    public int? rtoId { get; set; }

    public string chassisNumber { get; set; }

    public string engineNumber { get; set; }

    public int? insuranceProviderId { get; set; }

    public string insuranceType { get; set; }

    public string insurancePolicyNumber { get; set; }

    public DateOnly? insuranceExpiryDate { get; set; }

    public bool? insuranceClaimHistory { get; set; }

    public int? numberOfInsuranceClaims { get; set; }

    public string pollutionCertificateNumber { get; set; }

    public DateOnly? pollutionCertificateExpiryDate { get; set; }

    public DateOnly? fitnessCertificateExpiryDate { get; set; }

    public DateOnly? roadTaxPaidUntilDate { get; set; }

    public DateOnly? lastServiceDate { get; set; }

    public int? lastServiceKilometers { get; set; }

    public int? nextServiceDueKilometers { get; set; }

    public bool? hasCompleteServiceHistory { get; set; }

    public bool? servicedAtAuthorizedCenter { get; set; }

    public int stateId { get; set; }

    public int cityId { get; set; }

    public string areaOrLocality { get; set; }

    public string pinCode { get; set; }

    public string exactAddress { get; set; }

    public string sellerType { get; set; }

    public string sellerName { get; set; }

    public string sellerPrimaryPhone { get; set; }

    public string sellerSecondaryPhone { get; set; }

    public string sellerEmailAddress { get; set; }

    public string sellerWhatsAppNumber { get; set; }

    public string preferredContactMethod { get; set; }

    public string availableForContactDays { get; set; }

    public string availableForContactHours { get; set; }

    public string detailedDescription { get; set; }

    public string sellingReason { get; set; }

    public string specialHighlights { get; set; }

    public string knownIssuesOrProblems { get; set; }

    public bool? availableForPhysicalInspection { get; set; }

    public bool? availableForTestDrive { get; set; }

    public string preferredViewingLocation { get; set; }

    public string viewingInstructions { get; set; }

    public string listingStatus { get; set; }

    public bool? isPromotedListing { get; set; }

    public bool? isFeaturedListing { get; set; }

    public bool? isUrgentSale { get; set; }

    public bool? isVerifiedListing { get; set; }

    public DateTime? listingCreatedDate { get; set; }

    public DateTime? listingExpiryDate { get; set; }

    public DateTime? listingLastModifiedDate { get; set; }

    public int? totalViews { get; set; }

    public int? totalInquiries { get; set; }

    public int? totalPhoneCalls { get; set; }

    public int? totalTestDrives { get; set; }

    public int? favoriteCount { get; set; }

    public string createdByUserId { get; set; }

    public string modifiedByUserId { get; set; }

    public string createdFromIPAddress { get; set; }

    public string listingSource { get; set; }

    public virtual ICollection<BusinessAnalytics> BusinessAnalytics { get; set; } = new List<BusinessAnalytics>();

    public virtual ICollection<CarImages> CarImageslisting { get; set; } = new List<CarImages>();

    public virtual ICollection<CarImages> CarImagesregistrationNumberNavigation { get; set; } = new List<CarImages>();

    public virtual ICollection<CarListingFeatures> CarListingFeatures { get; set; } = new List<CarListingFeatures>();

    public virtual ICollection<CarListingViews> CarListingViews { get; set; } = new List<CarListingViews>();

    public virtual ICollection<CustomerInquiries> CustomerInquiries { get; set; } = new List<CustomerInquiries>();

    public virtual CarBrands brand { get; set; }

    public virtual VehicleCategories category { get; set; }

    public virtual GeographicCities city { get; set; }

    public virtual CarColors color { get; set; }

    public virtual EngineSpecifications engineSpec { get; set; }

    public virtual FuelTypes fuelType { get; set; }

    public virtual InsuranceProviders insuranceProvider { get; set; }

    public virtual CarModels model { get; set; }

    public virtual CarConditionLevels overallCondition { get; set; }

    public virtual RTOCodes rto { get; set; }

    public virtual GeographicStates state { get; set; }

    public virtual TransmissionTypes transmission { get; set; }

    public virtual CarVariants variant { get; set; }
}