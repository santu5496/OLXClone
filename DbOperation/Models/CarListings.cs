// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace DbOperation.Models;

public partial class CarListings
{
    public int ListingId { get; set; }

    public string ListingTitle { get; set; }

    public int BrandId { get; set; }

    public int ModelId { get; set; }

    public int? VariantId { get; set; }

    public int? CategoryId { get; set; }

    public int ManufacturingYear { get; set; }

    public int? ManufacturingMonth { get; set; }

    public int RegistrationYear { get; set; }

    public int? RegistrationMonth { get; set; }

    public int? VehicleAge { get; set; }

    public int? EngineCapacityInCC { get; set; }

    public decimal? EngineCapacityInLiters { get; set; }

    public int? EnginePowerInBHP { get; set; }

    public decimal? EnginePowerInKW { get; set; }

    public int? EngineTorqueInNm { get; set; }

    public int? EngineSpecId { get; set; }

    public int FuelTypeId { get; set; }

    public int TransmissionId { get; set; }

    public int? NumberOfGears { get; set; }

    public int? ColorId { get; set; }

    public int? NumberOfDoors { get; set; }

    public int? SeatingCapacity { get; set; }

    public int? BootSpaceInLiters { get; set; }

    public int? KerbWeightInKG { get; set; }

    public int? GroundClearanceInMM { get; set; }

    public int? TotalPreviousOwners { get; set; }

    public int? CurrentOwnershipDuration { get; set; }

    public int KilometersOnOdometer { get; set; }

    public int? AverageMonthlyKilometers { get; set; }

    public decimal? MileageInCityKMPL { get; set; }

    public decimal? MileageOnHighwayKMPL { get; set; }

    public decimal? CombinedMileageKMPL { get; set; }

    public int? OverallConditionId { get; set; }

    public int? ExteriorConditionRating { get; set; }

    public int? InteriorConditionRating { get; set; }

    public int? EngineConditionRating { get; set; }

    public int? TyreConditionRating { get; set; }

    public bool? HasAccidentHistory { get; set; }

    public string AccidentSeverityLevel { get; set; }

    public bool? IsFloodAffected { get; set; }

    public bool? HasElectricalIssues { get; set; }

    public bool? HasMechanicalIssues { get; set; }

    public bool? RequiresImmediateRepairs { get; set; }

    public decimal? EstimatedRepairCost { get; set; }

    public decimal? OriginalPurchasePrice { get; set; }

    public decimal? CurrentMarketPrice { get; set; }

    public decimal SellingPriceAsked { get; set; }

    public decimal? MinimumAcceptablePrice { get; set; }

    public bool? IsPriceNegotiable { get; set; }

    public bool? PriceIncludesTransfer { get; set; }

    public DateOnly? PriceValidUntilDate { get; set; }

    public string RegistrationNumber { get; set; }

    public int? RTOId { get; set; }

    public string ChassisNumber { get; set; }

    public string EngineNumber { get; set; }

    public int? InsuranceProviderId { get; set; }

    public string InsuranceType { get; set; }

    public string InsurancePolicyNumber { get; set; }

    public DateOnly? InsuranceExpiryDate { get; set; }

    public bool? InsuranceClaimHistory { get; set; }

    public int? NumberOfInsuranceClaims { get; set; }

    public string PollutionCertificateNumber { get; set; }

    public DateOnly? PollutionCertificateExpiryDate { get; set; }

    public DateOnly? FitnesssCertificateExpiryDate { get; set; }

    public DateOnly? RoadTaxPaidUntilDate { get; set; }

    public DateOnly? LastServiceDate { get; set; }

    public int? LastServiceKilometers { get; set; }

    public int? NextServiceDueKilometers { get; set; }

    public bool? HasCompleteServiceHistory { get; set; }

    public bool? ServicedAtAuthorizedCenter { get; set; }

    public int StateId { get; set; }

    public int CityId { get; set; }

    public string AreaOrLocality { get; set; }

    public string PinCode { get; set; }

    public string ExactAddress { get; set; }

    public string SellerType { get; set; }

    public string SellerName { get; set; }

    public string SellerPrimaryPhone { get; set; }

    public string SellerSecondaryPhone { get; set; }

    public string SellerEmailAddress { get; set; }

    public string SellerWhatsAppNumber { get; set; }

    public string PreferredContactMethod { get; set; }

    public string AvailableForContactDays { get; set; }

    public string AvailableForContactHours { get; set; }

    public string DetailedDescription { get; set; }

    public string SellingReason { get; set; }

    public string SpecialHighlights { get; set; }

    public string KnownIssuesOrProblems { get; set; }

    public bool? AvailableForPhysicalInspection { get; set; }

    public bool? AvailableForTestDrive { get; set; }

    public string PreferredViewingLocation { get; set; }

    public string ViewingInstructions { get; set; }

    public string ListingStatus { get; set; }

    public bool? IsPromotedListing { get; set; }

    public bool? IsFeaturedListing { get; set; }

    public bool? IsUrgentSale { get; set; }

    public bool? IsVerifiedListing { get; set; }

    public DateTime? ListingCreatedDate { get; set; }

    public DateTime? ListingExpiryDate { get; set; }

    public DateTime? ListingLastModifiedDate { get; set; }

    public int? TotalViews { get; set; }

    public int? TotalInquiries { get; set; }

    public int? TotalPhoneCalls { get; set; }

    public int? TotalTestDrives { get; set; }

    public int? FavoriteCount { get; set; }

    public string CreatedByUserId { get; set; }

    public string ModifiedByUserId { get; set; }

    public string CreatedFromIPAddress { get; set; }

    public string ListingSource { get; set; }

    public virtual CarBrands Brand { get; set; }

    public virtual ICollection<BusinessAnalytics> BusinessAnalytics { get; set; } = new List<BusinessAnalytics>();

    public virtual ICollection<CarImages> CarImages { get; set; } = new List<CarImages>();

    public virtual ICollection<CarListingFeatures> CarListingFeatures { get; set; } = new List<CarListingFeatures>();

    public virtual ICollection<CarListingViews> CarListingViews { get; set; } = new List<CarListingViews>();

    public virtual VehicleCategories Category { get; set; }

    public virtual GeographicCities City { get; set; }

    public virtual CarColors Color { get; set; }

    public virtual ICollection<CustomerInquiries> CustomerInquiries { get; set; } = new List<CustomerInquiries>();

    public virtual EngineSpecifications EngineSpec { get; set; }

    public virtual FuelTypes FuelType { get; set; }

    public virtual InsuranceProviders InsuranceProvider { get; set; }

    public virtual CarModels Model { get; set; }

    public virtual CarConditionLevels OverallCondition { get; set; }

    public virtual RTOCodes RTO { get; set; }

    public virtual GeographicStates State { get; set; }

    public virtual TransmissionTypes Transmission { get; set; }

    public virtual CarVariants Variant { get; set; }
}